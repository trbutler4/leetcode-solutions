#!/bin/bash

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print usage
usage() {
    echo "Usage: $0 <problem_name> <language>"
    echo ""
    echo "Languages supported: c, go, python, rust"
    echo ""
    echo "Examples:"
    echo "  $0 88_merged-sorted-array c"
    echo "  $0 88_merged-sorted-array go"
    echo "  $0 88_merged-sorted-array python"
    echo "  $0 88_merged-sorted-array rust"
    echo ""
    echo "Available problems:"
    for dir in */; do
        if [[ -d "$dir" && "$dir" != ".ropeproject/" ]]; then
            echo "  ${dir%/}"
        fi
    done
}

# Function to print colored messages
print_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if correct number of arguments provided
if [ $# -ne 2 ]; then
    print_error "Invalid number of arguments"
    usage
    exit 1
fi

PROBLEM_NAME="$1"
LANGUAGE="$2"

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

# Check if problem directory exists
if [ ! -d "$PROBLEM_NAME" ]; then
    print_error "Problem directory '$PROBLEM_NAME' not found"
    usage
    exit 1
fi

# Determine solution directory based on language
case "$LANGUAGE" in
    "c")
        SOLUTION_DIR="$PROBLEM_NAME/solution-c"
        ;;
    "go")
        SOLUTION_DIR="$PROBLEM_NAME/solution-go"
        ;;
    "python")
        SOLUTION_DIR="$PROBLEM_NAME/solution-python"
        ;;
    "rust")
        SOLUTION_DIR="$PROBLEM_NAME/solution-rust"
        ;;
    *)
        print_error "Unsupported language: $LANGUAGE"
        print_error "Supported languages: c, go, python, rust"
        exit 1
        ;;
esac

# Check if solution directory exists
if [ ! -d "$SOLUTION_DIR" ]; then
    print_error "Solution directory '$SOLUTION_DIR' not found"
    exit 1
fi

print_info "Running $LANGUAGE solution for problem: $PROBLEM_NAME"
echo ""

# Change to solution directory
cd "$SOLUTION_DIR"

# Run based on language
case "$LANGUAGE" in
    "c")
        print_info "Building C solution..."
        if [ ! -f "main.c" ]; then
            print_error "main.c not found in $SOLUTION_DIR"
            exit 1
        fi
        
        gcc -o main main.c
        if [ $? -eq 0 ]; then
            print_success "Build successful"
            print_info "Running C solution..."
            echo ""
            ./main
        else
            print_error "Build failed"
            exit 1
        fi
        ;;
        
    "go")
        print_info "Building and running Go solution..."
        if [ ! -f "main.go" ]; then
            print_error "main.go not found in $SOLUTION_DIR"
            exit 1
        fi
        
        # Build the binary
        go build -o main main.go
        if [ $? -eq 0 ]; then
            print_success "Build successful"
            print_info "Running Go solution..."
            echo ""
            ./main
        else
            print_error "Build failed"
            exit 1
        fi
        ;;
        
    "python")
        print_info "Running Python solution..."
        if [ ! -f "main.py" ]; then
            print_error "main.py not found in $SOLUTION_DIR"
            exit 1
        fi
        
        echo ""
        python3 main.py
        ;;
        
    "rust")
        print_info "Building and running Rust solution..."
        if [ ! -f "Cargo.toml" ]; then
            print_error "Cargo.toml not found in $SOLUTION_DIR"
            print_error "This doesn't appear to be a valid Rust project"
            exit 1
        fi
        
        cargo build
        if [ $? -eq 0 ]; then
            print_success "Build successful"
            print_info "Running Rust solution..."
            echo ""
            cargo run
        else
            print_error "Build failed"
            exit 1
        fi
        ;;
esac

echo ""
print_success "Execution completed"